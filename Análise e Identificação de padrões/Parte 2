Bloco 2 ‚Äî An√°lise de Thumbnails & Padr√µes Visuais
üìå Objetivo

Descrever cada thumbnail (dos 50 itens) em JSON padronizado com: composi√ß√£o, cores, texto detectado, elementos de destaque etc.

Comparar (top vs. bottom) e extrair padr√µes visuais replic√°veis (o que funciona) e anti-padr√µes (o que evitar).

Persistir a descri√ß√£o individual na aba Dados ordenados (Descri√ß√£oThumb) e o relat√≥rio consolidado de padr√µes na aba IDentifica√ß√£o de padr√µes (Thumb).

üîÑ Fluxo (alto n√≠vel)

Ler linhas da aba Dados ordenados.

Loop item a item (at√© 50):

Se Descri√ß√£oThumb est√° vazia ‚Üí analisar a imagem via Vision LLM ‚Üí salvar a descri√ß√£o.

Se j√° existe, pular a an√°lise e seguir.

Consolidar as descri√ß√µes (Aggregate) ‚Üí Agente de Padr√µes Visuais gera JSON comparativo top vs. bottom ‚Üí salvar na aba IDentifica√ß√£o de padr√µes (coluna Thumb).

üß© N√≥s e Configura√ß√£o
1) Trigger

Node: When clicking 'Execute workflow'

Dispara a execu√ß√£o manual.

2) Leitura & Normaliza√ß√£o

Node: Get row(s) in sheet1

Doc: Teste Dev IA Pleno

Aba: Dados ordenados

Node: Edit Fields3

Define campos usados adiante:

row_number = {{$json.row_number}}

(CORRE√á√ÉO 1) Renomeie o campo sem nome para algo como ThumbUrl e atribua:

ThumbUrl = {{$json.Thumb}}


Hoje o name est√° vazio e isso pode quebrar o fluxo em execu√ß√µes posteriores.

3) Limite & Loop

Node: Code in JavaScript

const limit = 50;
return $input.all().slice(0, limit);


Node: Loop Over Items2 (SplitInBatches)

Itera item a item, permitindo atualizar a planilha a cada descri√ß√£o analisada.

4) ‚ÄúJ√° tem descri√ß√£o?‚Äù (desvio condicional)

Node: If

Condi√ß√£o: Descri√ß√£oThumb est√° vazia

Se vazio ‚Üí vai para Analyze image

Se n√£o vazio ‚Üí volta ao Loop Over Items2 (pr√≥ximo item)

Garante idempot√™ncia: s√≥ analisa o que ainda n√£o tem descri√ß√£o.

5) An√°lise da Thumbnail (por item)

Node: Analyze image (OpenAI Vision)

Model: gpt-4o-mini

Prompt: Especialista em An√°lise Visual‚Ä¶ (o que voc√™ colou)

Formato de sa√≠da exigido:

{
  "descricao_detalhada": "...",
  "tags_visuais": ["..."],
  "cores_predominantes": ["..."],
  "texto_detectado": "...",
  "composicao": {
    "enquadramento": "...",
    "layout": "...",
    "contraste": "...",
    "elementos_destaque": ["..."]
  },
  "gancho_visual": "...",
  "resumo_visual": "..."
}


(CORRE√á√ÉO 2 ‚Äì CR√çTICA) O campo imageUrls est√° vazio:

- "imageUrls": "={{ $json[\"\"] }}",
+ "imageUrls": "={{ $('Loop Over Items2').item.json.Thumb || $('Edit Fields3').item.json.ThumbUrl }}",


Assim garantimos que a URL venha do item atual do loop.

Node: Wait (20s)

D√° tempo para a API responder e evita ‚Äúrace‚Äù na atualiza√ß√£o do Sheets quando h√° varia√ß√µes de lat√™ncia.

Pode ser reduzido se o modelo responder r√°pido.

Node: Update row in sheet

Doc: Dados ordenados

Matching: row_number

Colunas gravadas:

row_number = {{ $('Loop Over Items2').item.json.row_number }}
Descri√ß√£oThumb = {{ $json.content }}   // conte√∫do retornado pelo Vision
// (CORRE√á√ÉO 3) evite escrever "Transcri√ß√£o": "=" ‚Äî remova ou deixe vazio.

6) Consolida√ß√£o & Padr√µes (comparativo top vs. bottom)

Ap√≥s o loop, o fluxo alterna para o caminho de consolida√ß√£o:

Node: Aggregate2 ‚Üí Get row(s) in sheet2 ‚Üí Edit Fields4 ‚Üí Code in JavaScript1 ‚Üí Aggregate3

Esses n√≥s juntam todas as Descri√ß√£oThumb (dos 50 itens) num payload.

Dica: Se voc√™ j√° possui a label ‚Äútop‚Äù vs ‚Äúbottom‚Äù por Classifica√ß√£oGeral ou por posi√ß√£o/score, agrupe no Code in JavaScript1 para montar o JSON de entrada do agente exatamente assim:

{
  "top_thumbnails": [ { ...descri√ß√£o... }, ... ],
  "bottom_thumbnails": [ { ...descri√ß√£o... }, ... ]
}


Node: AI Agent2 (Analista de Padr√µes Visuais)

Model: gpt-4.1-mini

Entrada esperada: o JSON acima (top/bottom)

Sa√≠da exigida (padr√µes + anti-padr√µes):

{
  "padr√µes_visuais": {
    "cores": { "top": [...], "bottom": [...], "diretriz": "...", "por_que_funciona": "..." },
    "composicao": { ... },
    "texto": { ... },
    "elementos_destaque": { ... },
    "express√µes_ou_sujeitos": { ... }
  },
  "anti_padr√µes": ["...", "..."],
  "insight_geral": "..."
}


Node: Update row in sheet1

Doc: IDentifica√ß√£o de padr√µes

Matching: row_number = 2

Coluna gravada:

Thumb = {{ $json.output }} // JSON consolidado de padr√µes visuais

üóÇÔ∏è Colunas Atualizadas

Aba Dados ordenados

Descri√ß√£oThumb (por v√≠deo) ‚Üí JSON com a descri√ß√£o visual padronizada.

Aba IDentifica√ß√£o de padr√µes

Thumb (linha 2) ‚Üí JSON consolidado de padr√µes e anti-padr√µes visuais.

‚úÖ Boas Pr√°ticas & Notas

Idempot√™ncia: o If impede reprocessar thumbs j√° descritas.

Limite: Code in JavaScript restringe a 50 itens (ajuste conforme sua rotina).

Campo ‚ÄúTranscri√ß√£o‚Äù: atualmente est√° sendo atualizado com "=". Se n√£o for usar aqui, remova do Update row in sheet.

Erros comuns:

imageUrls vazio ‚Üí corrigido acima.

Campo sem nome no Set (Edit Fields3) ‚Üí nomeie como ThumbUrl para evitar side effects.

Taxa/Lat√™ncia: O Wait √© conservador. Se bater limite de requests, aumente o batch ou o Wait.

üß™ Teste r√°pido (passo a passo)

Marque 1‚Äì2 linhas da aba Dados ordenados com Descri√ß√£oThumb vazia e Thumb com URL p√∫blica.

Rode o workflow:

Veja o Analyze image retornando content JSON.

Confira no Update row in sheet o campo Descri√ß√£oThumb preenchido.

Ap√≥s os 50 itens processados, verifique na aba IDentifica√ß√£o de padr√µes a coluna Thumb (linha 2) com o JSON consolidado.
